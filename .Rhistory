install.packages("Adegenet")
install.packages(adegenet)
install.packages("adegenet")
install.packages("assigner")
if (!require("devtools")) install.packages("devtools")
library(devtools)
install_github("thierrygosselin/assigner")
library(assigner)
install.packages("SNPRelate")
install.packages("stackr")
devtools::install_github("thierrygosselin/assigner", build_vignettes = TRUE)
try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("SNPRelate")
devtools::install_github("thierrygosselin/assigner", build_vignettes = TRUE)
help(assigner)
help(??assigner)
help("??assigner")
install.packages("ggplot2")
package(knitr)
install.packages("knitr")
install.packages("phangorn", dep=TRUE)
library(stats)
> library(ade4)
library(ade4)
library(ape)
library(adegenet)
library(phangorn)
install.packages("adegenet", repos = "http://r-forge.r-project.org")
install.packages("adegenet", repos = "http://r-forge.r-project.org")
source("http://adegenet.r-forge.r-project.org/files/patches/auxil.R")
install.packages("vegan")
library("rgrass7")
library("poppr")
library("adegenet")
install.packages("devtools")
library(devtools)
install_github("thibautjombart/adegenet")
library(ggplot2)
library(readr)
cohort_sub_cov_2018 <- read_csv("~/Desktop/ascap/chapter_5/cohort_sub_cov_2018.csv")
View(cohort_sub_cov_2018)
View(cohort_sub_cov_2018)
library(datasets)
data("airquality")
Viw(airquality)
View(airquality)
qplot(cohort_sub_cov_2018$sub_cov_45, cohort_sub_cov_2018$sub_cov_64, geom = 'boxplot')
qplot(cohort_sub_cov_2018$sub_cov_45 cohort_sub_cov_2018$sub_cov_64, geom = 'boxplot')
library(readr)
cohort_sub_cov_2018_transposed <- read_csv("~/Desktop/ascap/chapter_5/cohort_sub_cov_2018_transposed.csv",
col_names = FALSE)
View(cohort_sub_cov_2018_transposed)
cohort_sub_cov_2018 <- read_csv("~/Desktop/ascap/chapter_5/cohort_sub_cov_2018_2.csv")
View(cohort_sub_cov_2018)
View(cohort_sub_cov_2018)
p <- ggplot(cohort_sub_cov_2018, aes(Substrate Size Class, Percent Cover))
cohort_sub_cov_2018 <- read_csv("~/Desktop/ascap/chapter_5/cohort_sub_cov_2018_2.csv")
View(cohort_sub_cov_2018)
cohort_sub_cov_2018$`Substrate Size Class` <- factor(cohort_sub_cov_2018$`Substrate Size Class`, labels = "45 and Below", "64", "90", "128", "180", "Above 180")
p10 <- ggplot(cohort_sub_cov_2018, aes(x = 'Substrate Size Class', y = 'Percent Cover')) + geom_boxplot()
p10
cohort_sub_cov_2018 <- read_csv("~/Desktop/ascap/chapter_5/cohort_sub_cov_2018_2.csv")
View(cohort_sub_cov_2018)
p10 <- ggplot(cohort_sub_cov_2018, aes(x = 'Substrate Size Class', y = 'Percent Cover')) + geom_boxplot()
p10
cohort_sub_cov_2018$`Substrate Size Class` <- factor(cohort_sub_cov_2018$`Substrate Size Class`, labels = c("45 and Below", "64", "90", "128", "180", "above 180"))
p10 <- ggplot(cohort_sub_cov_2018, aes(x = 'Substrate Size Class', y = 'Percent Cover')) + geom_boxplot()
p10
p10 <- ggplot(cohort_sub_cov_2018, aes(x = Substrate Size Class, y = Percent Cover)) + geom_boxplot()
View(cohort_sub_cov_2018)
cohort_sub_cov_2018 <- read_csv("~/Desktop/ascap/chapter_5/cohort_sub_cov_2018_2.csv")
cohort_sub_cov_2018 <- read_csv("~/Desktop/ascap/chapter_5/cohort_sub_cov_2018_2.csv")
View(cohort_sub_cov_2018)
p10 <- ggplot(cohort_sub_cov_2018, aes(x = Size, y = Cover)) + geom_boxplot()
p10
p10 <- ggplot(cohort_sub_cov_2018, aes(x = Size, y = Cover)) + geom_boxplot(varwidth = TRUE)
p10
cohort_sub_cov_2018 <- read_csv("~/Desktop/ascap/chapter_5/cohort_sub_cov_2018_2.csv")
cohort_sub_cov_2018$Size <- factor(cohort_sub_cov_2018$Size, labels = c("45 and Below", "64", "90", "128", "180", "above 180"))
p10 <- ggplot(cohort_sub_cov_2018, aes(x = Size, y = Cover)) + geom_boxplot(varwidth = TRUE)
p10
p10 + scale_color_grey() + theme_classic()
p11 <- ggplot(cohort_sub_cov_2018, aes(x=Size, y=Cover)) + geom_boxplot(fill="gray") + labs(title="Plot of Percent Cover Per Substrate Size Class",x="Substrate Size Class", y = "Percent Cover")+theme_classic()
p11
install.packages(c("ade4", "amap", "arm", "BDgraph", "bindrcpp", "bit", "blob", "broom", "cluster", "curl", "data.table", "DBI", "deldir", "dplyr", "foreign", "Formula", "future", "globals", "gmodels", "highr", "htmlTable", "htmlwidgets", "httpuv", "lavaan", "LearnBayes", "lme4", "lmtest", "maps", "MASS", "Matrix", "mgcv", "mice", "modelr", "munsell", "mvtnorm", "network", "nlme", "pbmcapply", "pillar", "pkgmaker", "plogr", "polysat", "poppr", "psych", "purrr", "qgraph", "quantreg", "randomForestSRC", "ranger", "Rcpp", "rgl", "rJava", "rjson", "rlang", "rmarkdown", "rngtools", "RSQLite", "shiny", "sourcetools", "sp", "spData", "spdep", "statnet.common", "stringdist", "stringi", "stringr", "survival", "tidyr", "utf8", "vcfR", "vegan", "viridis", "xgboost", "xlsx", "XML", "yaml", "zoo"))
install.packages(c("ade4", "amap", "arm", "BDgraph", "bindrcpp", "bit", "blob", "broom", "cluster", "curl", "data.table", "DBI", "deldir", "dplyr", "foreign", "Formula", "future", "globals", "gmodels", "highr", "htmlTable", "htmlwidgets", "httpuv", "lavaan", "LearnBayes", "lme4", "lmtest", "maps", "MASS", "Matrix", "mgcv", "mice", "modelr", "munsell", "mvtnorm", "network", "nlme", "pbmcapply", "pillar", "pkgmaker", "plogr", "polysat", "poppr", "psych", "purrr", "qgraph", "quantreg", "randomForestSRC", "ranger", "Rcpp", "rgl", "rJava", "rjson", "rlang", "rmarkdown", "rngtools", "RSQLite", "shiny", "sourcetools", "sp", "spData", "spdep", "statnet.common", "stringdist", "stringi", "stringr", "survival", "tidyr", "utf8", "vcfR", "vegan", "viridis", "xgboost", "xlsx", "XML", "yaml", "zoo"))
install.packages(c("ade4", "amap", "arm", "BDgraph", "bindrcpp", "bit", "blob", "broom", "cluster", "curl", "data.table", "DBI", "deldir", "dplyr", "foreign", "Formula", "future", "globals", "gmodels", "highr", "htmlTable", "htmlwidgets", "httpuv", "lavaan", "LearnBayes", "lme4", "lmtest", "maps", "MASS", "Matrix", "mgcv", "mice", "modelr", "munsell", "mvtnorm", "network", "nlme", "pbmcapply", "pillar", "pkgmaker", "plogr", "polysat", "poppr", "psych", "purrr", "qgraph", "quantreg", "randomForestSRC", "ranger", "Rcpp", "rgl", "rJava", "rjson", "rlang", "rmarkdown", "rngtools", "RSQLite", "shiny", "sourcetools", "sp", "spData", "spdep", "statnet.common", "stringdist", "stringi", "stringr", "survival", "tidyr", "utf8", "vcfR", "vegan", "viridis", "xgboost", "xlsx", "XML", "yaml", "zoo"))
micro_data_file <- import2genind("ascap_micro_no13_2017.str")
library(adegenet)
library("vegan")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages('rlang')
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
setwd("~/Documents/BOOTCAMP_CMM/final_project/machine-learning-project")
library(MASS)
phobia_personality_data = read.csv("Data/personality_traits_adjusted_scale_MOSHER.csv", header = TRUE)
View(phobia_personality_data)
model_fit <- polr(Spiders ~ Daily_events + Prioritising_workload + Writing_notes + Workaholism +
Thinking_ahead + Final_judgement + Reliability + Keeping_promises + Loss_of_interest +
Friends_versus_money + Funniness + Fake + Criminal_damage + Decision_making +
Elections + Self_criticism + Judgment_calls + Hypochondria + Empathy + Eating_to_survive +
Giving + Compassion_to_animals + Borrowed_stuff + Loneliness + Cheating_in_school +
Health + Changing_the_past + God + Dreams	+ Charity + Number_of_friends + Waiting +
New_environment + Mood_swings + Appearence_and_gestures + Socializing + Achievements +
Responding_to_a_serious_letter + Children + Assertiveness + Getting_angry +
Knowing_the_right_people + Public_speaking + Unpopularity + Life_struggles + Happiness_in_life +
Energy_levels + Small_big_dogs + Personality + Finding_lost_valuables + Getting_up + Interests_or_hobbies +
Parents_advice + Questionnaires_or_polls, data = phobia_personality_data, Hess = TRUE)
summary(model_fit)
summary_table <- coef(summary(model_fit))
summary_table
pval <- pnorm(abs(summary_table[, "t value"]),lower.tail = FALSE)* 2
summary_table2 <- cbind(summary_table, "p value" = round(pval,3))
summary_table2
